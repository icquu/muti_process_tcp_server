# Generated by iptables-save v1.4.21 on Sat Jan 16 21:56:49 2021
*raw
:PREROUTING ACCEPT [1459:175868]
:OUTPUT ACCEPT [1776:1662369]
-A PREROUTING -i eth0 -p tcp --tcp-flags FIN,SYN,RST,ACK SYN -j CT --notrack
COMMIT
# Completed on Sat Jan 16 21:56:49 2021
# Generated by iptables-save v1.4.21 on Sat Jan 16 21:56:49 2021
*filter
:INPUT ACCEPT [1390:172104]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [1776:1662369]
-A INPUT -i eth0 -p tcp -m state --state INVALID,UNTRACKED -j SYNPROXY --sack-perm --timestamp --wscale 7 --mss 1460
-A INPUT -i eth0 -p tcp -m state --state INVALID -j DROP
-A INPUT -p tcp ! --syn -m state --state NEW -j DROP
-A INPUT -p tcp -m state --state NEW -m tcpmss ! --mss 536:65535 -j DROP
-A INPUT -p tcp --tcp-flags FIN,SYN FIN,SYN -j DROP
-A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
-A INPUT -p tcp --tcp-flags FIN,RST FIN,RST -j DROP
-A INPUT -p tcp --tcp-flags FIN,ACK FIN -j DROP
-A INPUT -p tcp --tcp-flags ACK,URG URG -j DROP
-A INPUT -p tcp --tcp-flags ACK,PSH PSH -j DROP
-A INPUT -p tcp --tcp-flags ALL NONE -j DROP
-A INPUT -s 224.0.0.0/3 -j DROP 
-A INPUT -s 169.254.0.0/16 -j DROP 
-A INPUT -s 172.16.0.0/12 -j DROP 
-A INPUT -s 192.0.2.0/24 -j DROP 
-A INPUT -s 192.168.0.0/16 -j DROP 
-A INPUT -s 10.0.0.0/8 -j DROP 
-A INPUT -s 0.0.0.0/8 -j DROP 
-A INPUT -s 240.0.0.0/5 -j DROP 
-A INPUT -s 127.0.0.0/8 ! -i lo -j DROP
COMMIT
# Completed on Sat Jan 16 21:56:49 2021

yum install bash-completion -y
yum remove firewalld -y
yum install iptables-services -y
----------------------------------------------------------------------------

systemctl enable rc-local.service
chmod +x /etc/rc.d/rc.local

cat >> /etc/rc.d/rc.local << EOF
iptables -t raw -A PREROUTING -i eth0 -p tcp --tcp-flags FIN,SYN,RST,ACK SYN -j CT --notrack
iptables -I INPUT -i eth0 -p tcp -m state --state INVALID -j DROP
iptables -I INPUT -i eth0 -p tcp -m state --state INVALID,UNTRACKED -j SYNPROXY --sack-perm --timestamp --wscale 7 --mss 1460
sysctl -w net/netfilter/nf_conntrack_tcp_loose=0
sysctl -w net/ipv4/tcp_timestamps=1
sysctl -w net/netfilter/nf_conntrack_max=2000000
sh -c 'echo 2000000 > /sys/module/nf_conntrack/parameters/hashsize'
EOF

systemctl enable --now cockpit.socket
systemctl enable rc-local.service
chmod +x /etc/rc.d/rc.local
history -c
reboot

-------------------------------------------------------------------------------


# Hint: Monitor nf_conntrack usage searched, found, new, etc.:

lnstat -c -1 -f nf_conntrack

# 查看syn_proxy是否生效

watch -n1 cat /proc/net/stat/synproxy

-------------------------------------------------------------------------------

ipset 和 iptables 联合使用实例：
-A INPUT -m set --match-set whitelist src -j ACCEPT
-A INPUT -m set --match-set blacklist src -j DROP

whitelist和blacklist分别是ipset定义的集合

-------------------------------------------------------------------------------

ipset的帮助：

ipset v7.1

Usage: ipset [options] COMMAND

Commands:
create SETNAME TYPENAME [type-specific-options]
        Create a new set
add SETNAME ENTRY
        Add entry to the named set
del SETNAME ENTRY
        Delete entry from the named set
test SETNAME ENTRY
        Test entry in the named set
destroy [SETNAME]
        Destroy a named set or all sets
list [SETNAME]
        List the entries of a named set or all sets
save [SETNAME]
        Save the named set or all sets to stdout
restore 
        Restore a saved state
flush [SETNAME]
        Flush a named set or all sets
rename FROM-SETNAME TO-SETNAME
        Rename two sets
swap FROM-SETNAME TO-SETNAME
        Swap the contect of two existing sets
help [TYPENAME]
        Print help, and settype specific help
version 
        Print version information
quit 
        Quit interactive mode

Options:
-o plain|save|xml
       Specify output mode for listing sets.
       Default value for "list" command is mode "plain"
       and for "save" command is mode "save".
-s 
        Print elements sorted (if supported by the set type).
-q 
        Suppress any notice or warning message.
-r 
        Try to resolve IP addresses in the output (slow!)
-! 
        Ignore errors when creating or adding sets or
        elements that do exist or when deleting elements
        that don't exist.
-n 
        When listing, just list setnames from the kernel.

-t 
        When listing, list setnames and set headers
        from kernel only.
-f 
        Read from the given file instead of standard
        input (restore) or write to given file instead
        of standard output (list/save).

Supported set types:
    list:set            3       skbinfo support
    list:set            2       comment support
    list:set            1       counters support
    list:set            0       Initial revision
    hash:mac            0       Initial revision
    hash:ip,mac         0       Initial revision
    hash:net,iface      6       skbinfo support
    hash:net,iface      5       forceadd support
    hash:net,iface      4       comment support
    hash:net,iface      3       counters support
    hash:net,iface      2       /0 network support
    hash:net,iface      1       nomatch flag support
    hash:net,iface      0       Initial revision
    hash:net,port       7       skbinfo support
    hash:net,port       6       forceadd support
    hash:net,port       5       comment support
    hash:net,port       4       counters support
    hash:net,port       3       nomatch flag support
    hash:net,port       2       Add/del range support
    hash:net,port       1       SCTP and UDPLITE support
    hash:net,port,net   2       skbinfo support
    hash:net,port,net   1       forceadd support
    hash:net,port,net   0       initial revision
    hash:net,net        2       skbinfo support
    hash:net,net        1       forceadd support
    hash:net,net        0       initial revision
    hash:net            6       skbinfo support
    hash:net            5       forceadd support
    hash:net            4       comment support
    hash:net            3       counters support
    hash:net            2       nomatch flag support
    hash:net            1       Add/del range support
    hash:net            0       Initial revision
    hash:ip,port,net    7       skbinfo support
    hash:ip,port,net    6       forceadd support
    hash:ip,port,net    5       comment support
    hash:ip,port,net    4       counters support
    hash:ip,port,net    3       nomatch flag support
    hash:ip,port,net    2       Add/del range support
    hash:ip,port,net    1       SCTP and UDPLITE support
    hash:ip,port,ip     5       skbinfo support
    hash:ip,port,ip     4       forceadd support
    hash:ip,port,ip     3       comment support
    hash:ip,port,ip     2       counters support
    hash:ip,port,ip     1       SCTP and UDPLITE support
    hash:ip,mark        2       skbinfo support
    hash:ip,mark        1       forceadd support
    hash:ip,mark        0       initial revision
    hash:ip,port        5       skbinfo support
    hash:ip,port        4       forceadd support
    hash:ip,port        3       comment support
    hash:ip,port        2       counters support
    hash:ip,port        1       SCTP and UDPLITE support
    hash:ip             4       skbinfo support
    hash:ip             3       forceadd support
    hash:ip             2       comment support
    hash:ip             1       counters support
    hash:ip             0       Initial revision
    bitmap:port         3       skbinfo support
    bitmap:port         2       comment support
    bitmap:port         1       counters support
    bitmap:port         0       Initial revision
    bitmap:ip,mac       3       skbinfo support
    bitmap:ip,mac       2       comment support
    bitmap:ip,mac       1       counters support
    bitmap:ip,mac       0       Initial revision
    bitmap:ip           3       skbinfo support
    bitmap:ip           2       comment support
    bitmap:ip           1       counters support
    bitmap:ip           0       Initial revision